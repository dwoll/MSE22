ylab("Temperatur")
ggplot(dL, aes(x=Date_round, y=Influenza, group=Year, color=year)) +
scale_color_manual(values=c(rep("#999999", 1), "#0091E0")) +
geom_ribbon(data=d_plot_avg,
aes(x=Date_round, y=Influenza_avg,
ymin=Influenza_min,
ymax=Influenza_max, group=TRUE),
color="#cccccc", fill="#cccccc") +
geom_line() +
geom_line(data=d_plot_avg,   aes(x=Date_round, y=Influenza_avg, group=TRUE),
color="#444444", size=0.8) +
geom_line(data=d_plot_2020,  aes(x=Date_round, y=Influenza, group=TRUE),
color="#0091E0", size=1) +
geom_point(data=d_plot_2020, aes(x=Date_round, y=Influenza, group=TRUE),
color="#0091E0", size=2) +
geom_line(aes(y=Corona), color="red", size=1) +
geom_point(aes(y=Corona), color="red", size=2) +
theme_bw() +
theme(legend.position=c(0.8, 0.8)) +
guides(x=guide_axis(angle=90)) +
xlab("Woche") +
ylab("Fallzahl")
ggsave("influenza_corona.png", width=6, height=4)
ggplot(dL, aes(x=Date_round, y=Influenza, group=Year, color=year)) +
scale_color_manual(values=c(rep("#999999", 1), "#0091E0")) +
geom_ribbon(data=d_plot_avg,
aes(x=Date_round, y=Influenza_avg,
ymin=Influenza_min,
ymax=Influenza_max, group=TRUE),
color="#cccccc", fill="#cccccc") +
geom_line() +
geom_line(data=d_plot_avg,   aes(x=Date_round, y=Influenza_avg, group=TRUE),
color="#444444", size=0.8) +
geom_line(data=d_plot_2020,  aes(x=Date_round, y=Influenza, group=TRUE),
color="#0091E0", size=1) +
geom_point(data=d_plot_2020, aes(x=Date_round, y=Influenza, group=TRUE),
color="#0091E0", size=2) +
geom_line(aes(y=Corona), color="red", size=1) +
geom_point(aes(y=Corona), color="red", size=2) +
theme_bw() +
theme(legend.position=c(0.8, 0.8)) +
guides(x=guide_axis(angle=90)) +
xlab("Woche") +
ylab("Fallzahl Influenza (blau/grau) / Corona (rot)")
ggsave("influenza_corona.png", width=6, height=4)
ggsave("influenza_corona.png", width=6, height=4)
ggplot(dL, aes(x=Date_round, y=Influenza, group=Year, color=year)) +
scale_color_manual(values=c(rep("#999999", 1), "#0091E0")) +
geom_ribbon(data=d_plot_avg,
aes(x=Date_round, y=Influenza_avg,
ymin=Influenza_min,
ymax=Influenza_max, group=TRUE),
color="#cccccc", fill="#cccccc") +
geom_line() +
geom_line(data=d_plot_avg,   aes(x=Date_round, y=Influenza_avg, group=TRUE),
color="#444444", size=0.8) +
geom_line(data=d_plot_2020,  aes(x=Date_round, y=Influenza, group=TRUE),
color="#0091E0", size=1) +
geom_point(data=d_plot_2020, aes(x=Date_round, y=Influenza, group=TRUE),
color="#0091E0", size=2) +
geom_line(aes(y=Corona), color="red", size=1) +
geom_point(aes(y=Corona), color="red", size=2) +
theme_bw() +
theme(legend.position=c(0.8, 0.8)) +
guides(x=guide_axis(angle=90)) +
xlab("Woche") +
ylab("Fallzahl Influenza (blau/grau) / Corona (rot)")
p <- ggplot(dL, aes(x=Date_round, y=Influenza, group=Year, color=year)) +
scale_color_manual(values=c(rep("#999999", 1), "#0091E0")) +
geom_ribbon(data=d_plot_avg,
aes(x=Date_round, y=Influenza_avg,
ymin=Influenza_min,
ymax=Influenza_max, group=TRUE),
color="#cccccc", fill="#cccccc") +
geom_line() +
geom_line(data=d_plot_avg,   aes(x=Date_round, y=Influenza_avg, group=TRUE),
color="#444444", size=0.8) +
geom_line(data=d_plot_2020,  aes(x=Date_round, y=Influenza, group=TRUE),
color="#0091E0", size=1) +
geom_point(data=d_plot_2020, aes(x=Date_round, y=Influenza, group=TRUE),
color="#0091E0", size=2) +
geom_line(aes(y=Corona), color="red", size=1) +
geom_point(aes(y=Corona), color="red", size=2) +
theme_bw() +
theme(legend.position=c(0.8, 0.8)) +
guides(x=guide_axis(angle=90)) +
xlab("Woche") +
ylab("Fallzahl Influenza (blau/grau) / Corona (rot)")
plotly::ggplotly(p)
library(rayshader)
library(rayshader)
localtif <- readRDS(url("http://dwoll.de/rayshader_localtif.rds"))
localtif
elmat %>%
sphere_shade(texture = "desert") %>%
add_water(detect_water(elmat), color = "desert") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 10, fov = 0, theta = 135, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
dat <- read.table(url("http://dwoll.de/dat_passos.csv"),
header=TRUE,
sep=";",
stringsAsFactors=FALSE)
saveRDS(dat, file="dat_passos.rds")
getwd()
dat <- readRDS(url("http://dwoll.de/dat_passos.rds"))
library(dplyr)
datSub <- dat %>%
filter(metric == "DMEAN",
structure == "1_HEART")
datSub %>%
group_by(Seite) %>%
summarise(M=mean(observed))
datSub
head(datSub)
datSub %>%
group_by(Seite) %>%
summarise(M=mean(observed))
library(ggplot2)
ggplot(datSub, aes(x=Groesse, y=Gewicht)) +
geom_point() +
geom_smooth(method=lm)
ggplot(datSub, aes(x=Groesse, y=Gewicht)) +
geom_point() +
geom_smooth(method=loess)
dim(dat)
nrow(dat)
ncol(dat)
head(dat, n=3)
tail(dat)
View(dat)
datSub <- dat %>%
filter(metric == "DMEAN",
structure == "1_HEART")
head(datSub)
datSub %>%
group_by(Seite) %>%
summarise(M=mean(observed))
library(ggplot2)
ggplot(datSub, aes(x=Groesse, y=Gewicht)) +
geom_point() +
geom_smooth(method=lm)
ggplot(datSub, aes(x=Seite, y=observed)) +
geom_boxplot()
ggplot(datSub, aes(x=Seite, y=observed)) +
geom_boxplot() +
geom_violin()
ggplot(datSub, aes(x=Seite, y=observed)) +
geom_boxplot() +
geom_violin(alpha=0.4)
ggplot(datSub, aes(x=Seite, y=observed)) +
geom_violin()
ggplot(datSub, aes(x=Groesse, y=Gewicht)) +
geom_point() +
geom_smooth(method=lm)
head(datSub)
fit <- lm(observed ~ GD1 + Seite + havePara, data=datSub)
summary(fit)
setwd("G:/mse_202021_R/R")
library(rayshader)
localtif <- readRDS(url("http://dwoll.de/rayshader_localtif.rds"))
elmat %>%
sphere_shade(texture="desert") %>%
add_water(detect_water(elmat), color="desert") %>%
add_shadow(ray_shade(elmat, zscale=3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale=10, fov=0, theta=135, zoom=0.75,
phi=45, windowsize=c(1000, 800))
elmat    <- raster_to_matrix(localtif)
localtif <- readRDS(url("http://dwoll.de/rayshader_localtif.rds"))
elmat    <- raster_to_matrix(localtif)
elmat %>%
sphere_shade(texture="desert") %>%
add_water(detect_water(elmat), color="desert") %>%
add_shadow(ray_shade(elmat, zscale=3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale=10, fov=0, theta=135, zoom=0.75,
phi=45, windowsize=c(1000, 800))
library(dplyr)
elmat    <- raster_to_matrix(localtif)
localtif <- raster::raster("rayshader.tif")
elmat    <- raster_to_matrix(localtif)
localtif <- raster::raster(url("http://dwoll.de/rayshader.tif"))
localtif <- raster::raster("rayshader.tif")
saveRDS(localtif, file="rayshader_localtif.rds")
localtif <- readRDS(url("http://dwoll.de/rayshader_localtif.rds"))
elmat    <- raster_to_matrix(localtif)
elmat %>%
sphere_shade(texture="desert") %>%
add_water(detect_water(elmat), color="desert") %>%
add_shadow(ray_shade(elmat, zscale=3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale=10, fov=0, theta=135, zoom=0.75,
phi=45, windowsize=c(1000, 800))
ggdiamonds = ggplot(diamonds) +
stat_density_2d(aes(x = x, y = depth, fill = stat(nlevel)),
geom = "polygon", n = 100, bins = 10, contour = TRUE) +
facet_wrap(clarity~.) +
scale_fill_viridis_c(option = "A")
library(ggplot2)
ggdiamonds = ggplot(diamonds) +
stat_density_2d(aes(x = x, y = depth, fill = stat(nlevel)),
geom = "polygon", n = 100, bins = 10, contour = TRUE) +
facet_wrap(clarity~.) +
scale_fill_viridis_c(option = "A")
par(mfrow = c(1, 2))
plot_gg(ggdiamonds, width = 5, height = 5, raytrace = FALSE, preview = TRUE)
plot_gg(ggdiamonds, width = 5, height = 5, multicore = TRUE, scale = 250,
zoom = 0.7, theta = 10, phi = 30, windowsize = c(800, 800))
dat <- readRDS(url("http://dwoll.de/dat_passos.rds"))
library(dplyr)
datSub <- dat %>%
filter(metric == "DMEAN",
structure == "1_HEART")
head(datSub)
datSub %>%
group_by(Seite) %>%
summarise(M=mean(observed))
library(ggplot2)
ggplot(datSub, aes(x=Seite, y=observed)) +
geom_boxplot()
ggplot(datSub, aes(x=Seite, y=observed)) +
geom_violin()
ggplot(datSub, aes(x=Groesse, y=Gewicht)) +
geom_point() +
geom_smooth(method=lm)
ggplot(datSub, aes(x=Groesse, y=Gewicht)) +
geom_point() +
geom_smooth(method=lm) +
facet_grid(Seite ~ .)
ggplot(datSub, aes(x=Groesse, y=Gewicht, color=haveLAG)) +
geom_point() +
geom_smooth(method=lm) +
facet_grid(Seite ~ .)
fit <- lm(observed ~ GD1 + Seite + haveLAG, data=datSub)
summary(fit)
dim(dat)
nrow(dat)
ncol(dat)
head(dat, n=3)
tail(dat)
View(dat)
sessionInfo()
dat <- read.table(url("http://dwoll.de/dat_passos.csv"),
header=TRUE,
sep=";",
stringsAsFactors=FALSE)
View(dat)
library(dplyr)
datSub <- dat %>%
filter(metric == "DMEAN",
structure == "1_HEART")
View(datSub)
head(datSub)
datSub %>%
group_by(Seite) %>%
summarise(M=mean(observed))
datSub %>%
group_by(Seite) %>%
summarise(M=mean(observed),
SD=sd(observed))
library(ggplot2)
ggplot(datSub, aes(x=Seite, y=observed)) +
geom_boxplot()
ggplot(datSub, aes(x=Seite, y=observed)) +
geom_violin()
ggplot(datSub, aes(x=Groesse, y=Gewicht, color=haveLAG)) +
geom_point() +
geom_smooth(method=lm) +
facet_grid(Seite ~ .)
fit <- lm(observed ~ GD1 + Seite + haveLAG, data=datSub)
fit
summary(fit)
localtif <- readRDS(url("http://dwoll.de/rayshader_localtif.rds"))
elmat    <- raster_to_matrix(localtif)
library(rayshader)
elmat    <- raster_to_matrix(localtif)
example(plot_3d)
shiny::runApp('G:/rlp_momo')
runApp('G:/rlp_momo/app_bs4Dash_200')
setwd("G:/mse_202021_R/MSE22")
dat <- readRDS(url("http://dwoll.de/dat_passos.rds"))
library(ggplot2)
ggplot(datSub, aes(x=Seite, y=observed)) +
geom_boxplot()
datSub %>%
group_by(Seite) %>%
summarise(M=mean(observed),
SD=sd(observed))
ggplot(datSub, aes(x=Seite, y=observed)) +
geom_boxplot()
datSub <- dat %>%
filter(metric == "DMEAN",
structure == "1_HEART")
library(dplyr)
datSub <- dat %>%
filter(metric == "DMEAN",
structure == "1_HEART")
head(datSub)
ggplot(datSub, aes(x=Seite, y=observed)) +
geom_boxplot()
getwd()
# example()
# ?Reserved,
# <-, =
# print()
# ls()
# rm()
# ?Arithmetic
# round(⟨number⟩, digits=⟨digits⟩)
# exp(), factorial()
# TRUE, FALSE, !, ==, !=, <, >, <=, >=, |, &
getwd()
setwd("g:/mse_202021_R/")
# example()
# ?Reserved,
# <-, =
# print()
# ls()
# rm()
# ?Arithmetic
# round(⟨number⟩, digits=⟨digits⟩)
# exp(), factorial()
# TRUE, FALSE, !, ==, !=, <, >, <=, >=, |, &
getwd()
dat <- read.table("dat_passos.csv", sep=";", header=TRUE)
getwd()
setwd("g:/mse_202021_R/MSE22/")
dat <- read.table("dat_passos.csv", sep=";", header=TRUE)
dat <- read.table("g:/mse_202021_R/dat_passos.csv", sep=";", header=TRUE)
dat <- read.table("g:/mse_202021_R/MSE22/dat_passos.csv", sep=";", header=TRUE)
dat <- read.table("g:/mse_202021_R/MSE22/dat_passos.csv",
sep=";",
header=TRUE)
1 + 3
1 +
3
1 + 3 + 4
1 +
3 +
4
1 +
3
1 +
3
+ 4
-3
+4
?read.table
TRUE
5 / 7
View(dat)
ggplot(datSub, aes(x=Groesse, y=Gewicht)) +
geom_point()
gg_diagram <- ggplot(datSub, aes(x=Groesse, y=Gewicht)) +
geom_point()
print(gg_diagram)
lm(Gewicht ~ Groesse, data=datSub)
lm_fit <- lm(Gewicht ~ Groesse, data=datSub)
summary(lm_fit)
coef(lm_fit)
fitted(lm_fit)
example(lm)
ls()
rm(lm.D9)
rm(lm.D90)
rm(gg_diagram, lm_fit)
2 == 3
2 == 2
(1+1) == 2
(4*1) == 4
(3/3) == 1
1 == 49*(1/49)
9 == (9*1)
10 == (10*1)
1 == 49*(1/49)
pi
print(49*(1/49), digits=99)
print(49*(1/49), digits=20)
?var
?cv.glm
library(boot)
library(boot)
?cv.glm
?var
1 + 3 * 4
(1 + 3) * 4
.libPaths()
sessionInfo()
?lm
help(lm)
help(package="dplyr")
vignette(package="dplyr")
vignette("dplyr", package="dplyr")
vignette(package="dplyr")
vignette("grouping", package="dplyr")
citation("lme4")
dat <- readRDS(url("http://dwoll.de/dat_passos.rds"))
View(dat)
dim(dat)
nrow(dat)
ncol(dat)
nrow(dat) > 20
head(dat, n=4)
dat_bad <- read.table("dat_passos.csv", col=",")
dat_bad <- read.table("dat_passos.csv", sep=",")
dat_bad <- read.table("dat_passos.csv", sep=",")
head(dat_bad)
tail(dat_bad, n=4)
str(dat)
dat_bad <- read.table("dat_passos.csv", sep=";", header=TRUE)
View(dat_bad)
str(dat_bad)
dat_good <- read.table("dat_passos.csv", sep=";", header=TRUE,
na.strings = "XX")
str(dat_good)
summary(dat)
dat[1, ]
dat[ , 1]
datSub[ , "observed"]
datSub$observed
write.table(datSub,
sep="\t",
row.names=FALSE,
col.names=TRUE,
dec=",")
write.table(datSub,
file="dat_sub.dat",
sep="\t",
row.names=FALSE,
col.names=TRUE,
dec=",")
?write.table
write.table(datSub,
file="dat_sub.dat",
sep="\t",
row.names=FALSE,
col.names=TRUE,
dec=",",
na=".")
dat <- read.table("dat_passos.csv",
sep=";",
header=TRUE)
str(dat)
dat <- read.table("dat_passos.csv",
sep=";",
header=TRUE,
stringsAsFactors=TRUE)
str(dat)
View(dat)
saveRDS(dat, file="dat_output.rds")
data_i_just_read <- readRDS(dat_output.rds)
data_i_just_read <- readRDS("dat_output.rds")
library(readxl)
dat_excel <- read_xlsx("Tabelle_Ampicillin_FINAL.xlsx")
View(dat_excel)
tail(dat_bad, n=4 asdf)ds
tail(dat_bad, n=4)
dat4 <- dat[1:4, ]
4dat <- dat[1:4, ]
dat4.asdf_asdf <- dat[1:4, ]
datLeft <- dat %>%
filter(Seite == "left",
Alter > 65) %>%
select(Alter, Seite, metric, structure, observed)
View(datLeft)
datLeft <- dat %>%
filter(Seite == "left",
metric == "DMEAN",
Alter > 65) %>%
select(Alter, Seite, metric, structure, observed)
View(datLeft)
datLeft <- dat %>%
filter(Seite == "left",
Alter > 65) %>%
select(-patID)
View(datLeft)
View(dat)
datLeft <- dat %>%
filter(Seite == "left",
Alter > 65) %>%
select(Alter, Seite, patID, everything())
View(datLeft)
dat %>%
filter(Alter < 18)
dat %>%
filter((Alter > 99) |
(Alter < 18) |
(BMI > 50)   |
(BMI < 10))
datMod <- dat %>%
rename(start=Beginn,
end=Ende)
datMod <- dat %>%
rename(start=Beginn,
end=Ende)
View(datMod)
dat <- read.table("dat_passos.csv",
sep=";",
header=TRUE)
datMod <- dat %>%
rename(start=Beginn,
end=Ende) %>%
mutate(Groesse_m=Groesse / 100,
BMI=Gewicht / Groesse_m^2,
age_grp=cut(Alter, breaks=c(0, median(Alter), 100)),
Geburtsdatum=as.Date(Geburtsdatum, format="%Y-%m-%d"),
ED_Histo=as.Date(ED_Histo, format="%Y-%m-%d"),
observed_std=scale(observed),
age_days=(ED_Histo - Geburtsdatum) / 365.25) %>%
arrange(Seite,
desc(Alter))
